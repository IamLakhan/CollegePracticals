#include<stdio.h>
#include<string.h>

void accept(char[10][10], int);
void display(char[10][10], int);
void bubbleSort(char[10][10], int);
void selectionSort(char[10][10], int);
int binary_search(char[10][10], int, int, char[]);
int binary_search_recursion(char[10][10], int, int, char[]);

int main()
{
	int choice, size, result;
	char str[10][10], key[10];
	
	do
	{
		printf("\n===========================");
		printf("\nMenu");
		printf("\n1.Accept String Array");
		printf("\n2.Display");
		printf("\n3.Bubble Sort");
		printf("\n4.Selection Sort");
		printf("\n5.Insertion Sort");
		printf("\n6.Binary Search");
		printf("\n7.Binary Search (Recursion)");
		printf("\n8.Exit");
		
		printf("\n\nEnter Choice :");
		scanf("%d",&choice);
		
		switch(choice)
		{	
			case 1:
				printf("\n===========================");
				printf("\nEnter the Size :");
				scanf("%d",&size);
				accept(str,size);
				break;
				
			case 2:
				printf("\n===========================");
				printf("\nString Array :::");
				display(str,size);
				break;
				
			case 3:
				printf("\n===========================");
				printf("\nBubble Sort :::");
				bubbleSort(str,size-1);
				display(str,size);
				break;
				
			case 4:
				printf("\n===========================");
				printf("\nSelection Sort :::");
				selectionSort(str,size-1);
				display(str,size);
				break;
				
			case 6:
				printf("\nEnter the string to search :");
				scanf("%s",key);
				result = binary_search(str,0,size,key);
				if(result == -1)
					printf("%s is not found in array !!!", key);
				else
					printf("%s is found at %d position.\n",key,result);
					
				break;
		}
	}while(choice != 8);
}

void accept(char str[10][10], int size)
{
	int i;
	for(i=0; i<size; i++)
	{
		printf("Enter String %d : ",(i+1));
		scanf("%s",&str[i]);
	}
}

void display(char str[10][10], int size)
{
	int i;
	for(i=0; i<size; i++)
	{
		printf("\nString %d : %s",(i+1), str[i]);
	}
}

void bubbleSort(char str[10][10], int size)
{
	int i,j;
	char temp[10];
	
	for(i=0; i<size; i++)
	{
		for(j=1; j<size; j++)
		{
			if(strcmp(str[j],str[j+1]) > 0)
			{
				strcpy(temp,str[j]);
				strcpy(str[j], str[j+1]);
				strcpy(str[j+1],temp);
			}
		}
	}
	printf("\nPasses = %d", i*j);
}

void selectionSort(char str[10][10], int size)
{
	int i,j,k=0;
	char temp[10];
	
	for(i=0; i<size; i++)
	{
		k=i;
		for(j=i+1; j<size; j++)
		{
			if(strcmp(str[j],str[k]) > 0)
			{
				k=j;
			}
		}
		if(k!=i)
		{
			strcpy(temp,str[i]);
			strcpy(str[i], str[k]);
			strcpy(str[k],temp);
		}
	}
	printf("\nPasses = %d", i*j);
}

int binary_search(char s[10][10], int i, int l, char key[])
{
	int mid = (i+l)/2;
	
	while(strcmp(s[mid],key) != 0 && i<l)
	{
		if(strcmp(s[mid],key)>0)
			i = mid+1;
		else
			l = mid-1;
			
		mid = (i+l)/2;
	}
	
	if(strcmp(s[mid],key) == 0)
		return mid;
		
	return -1;
}
