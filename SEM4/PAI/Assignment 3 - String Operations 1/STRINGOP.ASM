PRINT MACRO M
LEA DX,M
MOV AH,09H
INT 21H
ENDM

DATA SEGMENT
MSGM DB 10,13,"**MENU**"
     DB 10,13,"1.ENTER STRING"
     DB 10,13,"2.LENGTH OF STRING"
     DB 10,13,"3.CHECK PALLINDROME"
     DB 10,13,"4.REVERSE"
     DB 10,13,"5.EXIT"
     DB 10,13,"ENTER YOUR CHOICE : $"

STR1 DB 20H
     DB 0
     DB 20 DUP(0)
     DB '$'

REV1 DB 20H
     DB 0
     DB 20 DUP(0)

MSGEN1 DB 10,13,"ENTER STRING : $"
MSGLEN DB 10,13,"LENGTH = $"
MSGREV DB 10,13,"REVERSE = $"
MSGPAL DB 10,13,"** STRING IS PALLINDROME **$"
MSGNOPAL DB 10,13,"** STRING IS NOT PALLINDROME **$"

DATA ENDS

CODE SEGMENT
ASSUME CS:CODE ,DS:DATA
MAIN:
	MOV AX,DATA
	MOV DS,AX

	MOV AX,02H
	INT 10H

Menu:   PRINT MSGM
	
	MOV AH,01H
	INT 21H

	CMP AL,31H
	JE Enter1
	CMP AL,32H
	JE Len1
	CMP AL,33H
	JE Pal
	CMP AL,34H
	JE Strrev
	CMP AL,35H
	JE Exit

Enter1: Print MSGEN1
	MOV AH,0AH
	LEA DX,STR1
	INT 21H
	JMP Menu

Len1:   PRINT MSGLEN
	CALL STRLENGTH
	JMP Menu

Pal:    CALL PALLI
	JMP Menu

Notpal: PRINT MSGNOPAL
	JMP Menu

Strrev: CALL REVERSE
	JMP Menu

Exit:   MOV AH,4CH
	INT 21H

	;Procedure for length

	STRLENGTH PROC
		MOV DL,[STR1+1]
		CMP DL,09H
		JNG NEXT1
		ADD DL,07H

	NEXT1:  ADD DL,30H
		MOV AH,02H
		INT 21H

	RET
	STRLENGTH ENDP

	;Procedure to check if String is pallindrome or not
	PALLI PROC
		LEA SI,STR1+2
		LEA DI,STR1
		MOV CH,0H
		MOV CL,[STR1+1]
		ADD DI,CX
		INC DI
	UP:     MOV AL,[SI]
		CMP [DI],AL
		JNE Notpal
		INC SI
		DEC DI
		DEC CL
		JNZ UP
		PRINT MSGPAL
	RET
	PALLI ENDP


	;Procedure for Reverse
	REVERSE PROC
		PRINT MSGREV
		LEA SI,STR1
		LEA DI,REV1
		MOV CL,[STR1+1]
		MOV CH,00H
		ADD SI,CX
		INC SI
	UP1:    MOV DL,[SI]
		MOV [DI],DL
		MOV AH,02H
		INT 21H

		DEC SI
		INC DI
		DEC CL
		JNZ UP1
	RET
	REVERSE ENDP
CODE ENDS
END MAIN


